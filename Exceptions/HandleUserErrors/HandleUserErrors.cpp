#include <iostream>
#include <string>
using namespace std;
// функция принимает на входе строку source и пытается преобразовать ее в вещественное число
// результат преобразования возвращается через параметр result, передаваемый в функцию по ссылке
// функция возвращает true, если исходная строка может быть преобразована в число
// и false, если не может

bool ReadDouble(const std::string& source, double& result)
{
    size_t errSymbolPos; // переменная, содержащая номер неверного символа в строке, из-за которого преобразование может быть неверным
    try
    {      // защищаемый блок
        result = stod(source, &errSymbolPos); // stod - функция преобразовывающая строку в число double
        if (errSymbolPos < source.length()) // если преобразование успешно, то позиция ошибочного символа равна длине строки
        {                                                          // если меньше - то строка не является эквивалентом числа
            result = 0;
            return false;                                 // возвращаем false
        }
    }
    catch (std::invalid_argument e) // отлавливаем исключение std::invalid_argument
    {
        result = 0;
        return false; // и возвращаем false
    }
    return true; // если все успешно, то true
}

// функция принимает на входе строку source и пытается преобразовать ее в число float
// результат преобразования возвращается через параметр result, передаваемый в функцию по ссылке
// функция возвращает true, если исходная строка может быть преобразована в число
// и false, если не может
bool ReadFloat(const std::string& source, float& result)
{
    size_t errSymbolPos;// переменная, содержащая номер неверного символа в строке, из-за которого преобразование может быть неверным
    result = stof(source, &errSymbolPos);// stoi - функция преобразовывающая строку в число float
    if (errSymbolPos < source.length()) // если преобразование успешно, то позиция ошибочного символа равна длине строки
    {                                                          // если меньше - то строка не является эквивалентом числа
        result = 0;
        return false;                                 // возвращаем false
    }
    return true;                                  // если все успешно, то true
}

// функция принимает на входе строку source и пытается преобразовать ее в целое число
// результат преобразования возвращается через параметр result, передаваемый в функцию по ссылке
// функция возвращает true, если исходная строка может быть преобразована в число
// и false, если не может

bool ReadInteger(const std::string& source, int& result)
{
    size_t errSymbolPos;// переменная, содержащая номер неверного символа в строке, из-за которого преобразование может быть неверным
    result = stoi(source, &errSymbolPos);// stoi - функция преобразовывающая строку в число int
    if (errSymbolPos < source.length()) // если преобразование успешно, то позиция ошибочного символа равна длине строки
    {                                                          // если меньше - то строка не является эквивалентом числа
        result = 0;
        return false;                                 // возвращаем false
    }
    return true;                                  // если все успешно, то true
}

void Calculate1()
{
    double a = 0, b = 0, c = 0, d = 0;
    string source;      // строка, в которой будем получать значения с консоли
    cout << "Введите коэффициент a:";
    cin >> source; // читаем строку
    bool r = ReadDouble(source, a); // преобразовываем ее в число
    if (!r) goto error; // если возвращено false - переходим к обработке ошибок в секцию с меткой error
    cout << "Введите коэффициент b:";
    cin >> source; // читаем строку
    r = ReadDouble(source, b); // преобразовываем ее в число
    if (!r) goto error; // если возвращено false - переходим к обработке ошибок в секцию с меткой error
    cout << "Введите коэффициент c:";
    cin >> source; // читаем строку
    r = ReadDouble(source, c); // преобразовываем ее в число
    if (!r) goto error; // если возвращено false - переходим к обработке ошибок в секцию с меткой error
    d = b * b - 4 * a * c;
    cout << " d = " << d << endl;
    return;
error:
    cout << "Ошибка ввода данных, вычисление невозможно";
}

int main()
{
    setlocale(LC_ALL, "");
    Calculate1();
}